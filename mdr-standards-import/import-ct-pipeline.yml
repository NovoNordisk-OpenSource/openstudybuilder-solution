# Combines the first and the last step of the CDICS CT Pipeline outlined in the documentation portal at
# /guides/cdisc/building-blocks.html#building-blocks
# 1. Import CDISC CT into CDISC DB
# 3. Import from CDISC DB into MDR DB

trigger: none

parameters:
- name: 'NEO4J_MDR_DATABASE'
  displayName: Name of the MDR DB
  type: string
  default: mdrdbdev
- name: 'NEO4J_CDISC_IMPORT_DATABASE'
  displayName: Name of the CDISC CT database (in contrast to the MDR DB)
  type: string
  default: cdisc-mdrdbdev
- name: 'CDISC_DATA_DIR'
  displayName: Directory of CDISC package.json files
  type: string
  default: $(Build.SourcesDirectory)/mdr_standards_import/container_booting
- name: 'CT_FILTER'
  displayName: Filter for selection of CT packages
  type: string
  default: "*.json"
- name: REPO_REFERENCE
  type: string
  default: self
- name: 'POOL'
  type: string
  default: clinical-mdr-agent
- name: 'USE_CLOUD_FILES'
  displayName: Boolean of whether or not to download files from cloud storage and migrate these files. If false, pipeline will use the local files in the repo as source.
  type: boolean
  default: true
- name: ID_NUMBER
  displayName: ID number of parallel deployments running in the same environment.
  type: string
  default: '1'
  values:
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
- name: ENV_REFERENCE
  type: string
  default: POC
  values:
  - DEV
  - POC
  - EDU
  - VAL
  - TST
  - PRD

stages:
- stage: import_cdisc_ct_into_mdr
  displayName: Import CT packages into the MDR DB
  variables:
    KEYVAULT_NAME: 'vault-cmdr-dev'
  jobs:
  - job:
    pool: ${{parameters.POOL}}
    timeoutInMinutes: 720
    steps:
      - checkout: ${{parameters.REPO_REFERENCE}}
      # Specify python version. The version must be manually installed beforehand so the agent has it available.
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.13.0'
          addToPath: true
          architecture: 'x64'

      # Get storage connection specifications from AzureKeyVault
      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'clinicalmdr-iac-poc'
          KeyVaultName: '${{variables.KEYVAULT_NAME}}'
          SecretsFilter:
            CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-DBUSER,
            CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-DBPASS,
            CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-BOLTPORT,
            CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-SERVER
          RunAsPreJob: false

      # Install packages
      - script: |
          python3 -m venv venv --clear
          source $(Build.SourcesDirectory)/venv/bin/activate
          pip install pipenv
          python -m pipenv install
        displayName: Install packages and prepare


      # Load CT and adjust
      - script: |
          source $(Build.SourcesDirectory)/venv/bin/activate
          export NEO4J_MDR_DATABASE=${{parameters.NEO4J_MDR_DATABASE}}
          export NEO4J_MDR_BOLT_PORT=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-BOLTPORT)
          export NEO4J_MDR_HOST=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-SERVER)
          export NEO4J_MDR_AUTH_USER=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-DBUSER)
          export NEO4J_MDR_AUTH_PASSWORD=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-DBPASS)
          export NEO4J_CDISC_IMPORT_DATABASE=${{parameters.NEO4J_CDISC_IMPORT_DATABASE}}
          export NEO4J_CDISC_IMPORT_BOLT_PORT=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-BOLTPORT)
          export NEO4J_CDISC_IMPORT_HOST=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-SERVER)
          export NEO4J_CDISC_IMPORT_AUTH_USER=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-DBUSER)
          export NEO4J_CDISC_IMPORT_AUTH_PASSWORD=$(CLINICAL-MDR-NEO4J-${{parameters.ENV_REFERENCE}}${{parameters.ID_NUMBER}}-DBPASS)

          python -m pipenv run pipeline_bulk_import TESTUSER "packages" true
        env:
            CDISC_DATA_DIR: ${{parameters.CDISC_DATA_DIR}}
        displayName: Download CT from CDISC API and import into CDISC DB

      - task: WhiteSource@21
        inputs:
          cwd: '$(System.DefaultWorkingDirectory)'